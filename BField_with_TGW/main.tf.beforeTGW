provider "aws" {
  region     = var.region
  access_key = var.access_key
  secret_key = var.secret_key
}

# Create the vpc for brownfield1
resource "aws_vpc" "brownfield1_vpc" {
  cidr_block = "100.127.0.0/24"

  tags = {
    Name = "brownfield1-vpc"
  }
}



# Create the vpc for brownfield2
resource "aws_vpc" "brownfield2_vpc" {
  cidr_block = "100.127.1.0/24"

  tags = {
    Name = "brownfield2-vpc"
  }
}



# Create the subnet for the brownfield1_vpc
resource "aws_subnet" "brownfield1-subnet" {
  vpc_id     = aws_vpc.brownfield1_vpc.id
  availability_zone = var.availability_zone1
  cidr_block = "100.127.0.0/25"

  tags = {
    Name = "brownfield1-subnet"
  }
}

# Create the subnet for the brownfield2_vpc
resource "aws_subnet" "brownfield2-subnet" {
  vpc_id     = aws_vpc.brownfield2_vpc.id
  availability_zone = var.availability_zone1
  cidr_block = "100.127.1.0/25"

  tags = {
    Name = "brownfield2-subnet"
  }
}

# Create the IGW for Brownfield1
resource "aws_internet_gateway" "igw-brownfield1" {
  vpc_id = aws_vpc.brownfield1_vpc.id

  tags = {
    Name = "brownfield1-igw"
  }
}

# Create the IGW for Brownfield2
resource "aws_internet_gateway" "igw-brownfield2" {
  vpc_id = aws_vpc.brownfield2_vpc.id

  tags = {
    Name = "brownfield2-igw"
  }
}


# Tag the default route-table created for brownfield1

resource "aws_default_route_table" "br1-rt" {
  default_route_table_id = aws_vpc.brownfield1_vpc.default_route_table_id

  tags = {
    Name = "brownfield1-RT"
  }
}


# Tag the default route-table created for brownfield2

resource "aws_default_route_table" "br2-rt" {
  default_route_table_id = aws_vpc.brownfield2_vpc.default_route_table_id

  tags = {
    Name = "brownfield2-RT"
  }
}

# Associate the route table created for brownfield1, associate with briwnfield1-IGW
resource "aws_route" "br1-default_to_igw" {
  route_table_id         = aws_vpc.brownfield1_vpc.default_route_table_id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id             = aws_internet_gateway.igw-brownfield1.id
}


# Associate the route table created for brownfield1, associate with briwnfield1-IGW
resource "aws_route" "br2-default_to_igw" {
  route_table_id         = aws_vpc.brownfield2_vpc.default_route_table_id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id             = aws_internet_gateway.igw-brownfield2.id
}

# Get ID for Amazon EC2 (basic)

data "aws_ami" "std_ami" {
  most_recent = true
  owners      = ["amazon"]

  filter {
    name   = "name"
    values = ["amzn2-ami-hvm*"]
  }
}

# create the security group for brownfield1
resource "aws_security_group" "br1-allow_all" {
  name        = "br-1-allow_all-sgroup"
  description = "Allow all traffic"
  vpc_id      = aws_vpc.brownfield1_vpc.id

  ingress {
    description = "All Traffic Inbound"
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    description = "All Traffic Outbound"
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "br1_all-in_out-SG"
  }

}

# create the security group for brownfield2
resource "aws_security_group" "br2-allow_all" {
  name        = "br-1-allow_all-sgroup"
  description = "Allow all traffic"
  vpc_id      = aws_vpc.brownfield2_vpc.id

  ingress {
    description = "All Traffic Inbound"
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    description = "All Traffic Outbound"
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "br2_all-in_out-SG"
  }

}

